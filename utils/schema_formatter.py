"""
–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ö–µ–º –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞ Learn Mode
"""


def format_schema(topic_data: dict) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Å—Ö–µ–º—É —Ç–µ–º—ã –≤ —Ç–µ–∫—Å—Ç –¥–ª—è LEARN_MODE_PROMPT

    –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ö–µ–º—ã:
    {
        "title": "–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã",
        "plan": "–ü–ª–∞–Ω —É—Ä–æ–∫–∞...",
        "explanation": [
            {
                "info": "–¢–µ–æ—Ä–∏—è",
                "action": "–í–æ–ø—Ä–æ—Å",
                "solution": "–†–µ—à–µ–Ω–∏–µ",
                "mistake_explanation": "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –æ—à–∏–±–æ–∫",
                "answer": "–û—Ç–≤–µ—Ç"
            }
        ],
        "boss": {
            "problem": "–£—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏",
            "steps": [
                {
                    "step_num": 1,
                    "action": "...",
                    "solution": "...",
                    "answer": "..."
                }
            ],
            "final_answer": "–ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç"
        },
        "summary": "–ö–æ–Ω—Å–ø–µ–∫—Ç"
    }
    """
    parts = []

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    title = topic_data.get('title', '–¢–µ–º–∞')
    parts.append(f"# –¢–ï–ú–ê: {title}\n")
    parts.append("---\n\n")

    # 1. –ü–õ–ê–ù
    plan = topic_data.get('plan', '')
    if plan:
        parts.append("## 1. –ü–õ–ê–ù –£–†–û–ö–ê\n\n")
        parts.append(f"{plan}\n\n")
        parts.append("---\n\n")

    # 2. –û–°–ù–û–í–ù–û–ï –û–ë–™–Ø–°–ù–ï–ù–ò–ï
    explanation = topic_data.get('explanation', [])
    if explanation:
        parts.append("## 2. –û–°–ù–û–í–ù–û–ï –û–ë–™–Ø–°–ù–ï–ù–ò–ï\n\n")
        parts.append("–í–µ–¥–∏ —É—á–µ–Ω–∏–∫–∞ —á–µ—Ä–µ–∑ —ç—Ç–∏ –±–ª–æ–∫–∏ –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û:\n\n")

        for i, block in enumerate(explanation, 1):
            parts.append(f"### –ë–ª–æ–∫ {i}\n\n")

            # info
            if 'info' in block:
                parts.append(f"**[info] –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:**\n{block['info']}\n\n")

            # action
            if 'action' in block:
                parts.append(f"**[action] –ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å:**\n{block['action']}\n\n")

            # solution (–¥–ª—è —Ç—å—é—Ç–æ—Ä–∞, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —É—á–µ–Ω–∏–∫—É)
            if 'solution' in block:
                parts.append(f"**[solution] –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ (–∏—Å–ø–æ–ª—å–∑—É–π –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫):**\n{block['solution']}\n\n")

            # mistake_explanation
            if 'mistake_explanation' in block:
                parts.append(f"**[mistake_explanation] –¢–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏:**\n")
                if isinstance(block['mistake_explanation'], dict):
                    for wrong_answer, explanation in block['mistake_explanation'].items():
                        parts.append(f"- –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç '{wrong_answer}': {explanation}\n")
                else:
                    parts.append(f"{block['mistake_explanation']}\n")
                parts.append("\n")

            # answer
            if 'answer' in block:
                parts.append(f"**[answer] –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:** {block['answer']}\n\n")

            parts.append("---\n\n")

    # 3. –§–ò–ù–ê–õ–¨–ù–´–ô –ë–û–°–°
    boss = topic_data.get('boss', {})
    if boss:
        parts.append("## 3. –§–ò–ù–ê–õ–¨–ù–´–ô –ë–û–°–° üéØ\n\n")

        # –£—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏
        if 'problem' in boss:
            parts.append(f"**[problem] –£—Å–ª–æ–≤–∏–µ:**\n{boss['problem']}\n\n")

        # –®–∞–≥–∏ —Ä–µ—à–µ–Ω–∏—è
        steps = boss.get('steps', [])
        if steps:
            parts.append("**–ü–æ–¥–∑–∞–¥–∞—á–∏ (–≤–µ–¥–∏ —É—á–µ–Ω–∏–∫–∞ –ø–æ—à–∞–≥–æ–≤–æ):**\n\n")
            for step in steps:
                step_num = step.get('step_num', '?')
                parts.append(f"#### –®–∞–≥ {step_num}\n\n")

                if 'action' in step:
                    parts.append(f"**[action]** {step['action']}\n\n")

                if 'solution' in step:
                    parts.append(f"**[solution]** {step['solution']}\n\n")

                if 'answer' in step:
                    parts.append(f"**[answer]** {step['answer']}\n\n")

        # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        if 'final_answer' in boss:
            parts.append(f"**[final_answer] –ò—Ç–æ–≥–æ–≤—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:** {boss['final_answer']}\n\n")

        parts.append("---\n\n")

    # 4. –ö–û–ù–°–ü–ï–ö–¢
    summary = topic_data.get('summary', '')
    if summary:
        parts.append("## 4. –ö–û–ù–°–ü–ï–ö–¢ (–¥–∞–π –≤ –∫–æ–Ω—Ü–µ —É—Ä–æ–∫–∞)\n\n")
        parts.append(f"{summary}\n")

    return "".join(parts)


def format_feedback_context(topic_data: dict, chat_history: str) -> dict:
    """
    –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞ —Ñ–∏–¥–±–µ–∫–∞

    Args:
        topic_data: –î–∞–Ω–Ω—ã–µ —Ç–µ–º—ã (–Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
        chat_history: –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞

    Returns:
        –°–ª–æ–≤–∞—Ä—å —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–ª—è FEEDBACK_PROMPT
    """
    return {
        'topic_title': topic_data.get('title', ''),
        'topic_description': topic_data.get('description', ''),
        'chat_history': chat_history,
        'final_summary': topic_data.get('summary', '')
    }
